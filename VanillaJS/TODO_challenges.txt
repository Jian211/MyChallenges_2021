7/1
    1. 제목의 텍스트는 마우스가 제목 위에 있을 때 변경되어야 한다.
    2. 제목의 텍스트는 마우스가 떠날 때 변경디어야 한다.
    3. 창 크기가 조정되면 제목이 변경되어야 한다.
    4. 마우스 오른쪽 버튼을 클릭하면 제목도 변경되어야한다.
    5. html and css파일을 변경하지말 것
    6. 모든 함수 핸들러는 "superEventHandle"의 내부에 있어야한다.
    7. 요구 사항 중 하나라도 충족이 않으면 X가 표시된다.
    
7/2 
    1. Use if/ else etc.
    2. 사이즈가 늘어나면 노란색
    3. 사이즈가 기본인 상태 보라색
    4. 사이즈가 줄어들면 하늘색.
    
7/5
    1. 0과 사용자가 정의한 숫자 사이의 범위에서 임의의 숫자를 찾습니다.
    2. 실시간으로 범위 값을 업데이트합니다.
    3. 사용자가 번호를 선택한 후에 만 재생됩니다.
    4. 게임이 패배하거나 이긴 경우 사용자에게 알립니다. 

7/7
    1. Using "date" and "setInterval"을 이용
    2. Time Until Chreistmas Eve의 남은 날,시,분,초 를 표현할 것.

7/8 
    1. 사용자가 버튼을 누르면 배열에서 무작위로 두가지 색상을 선택 합니다.
    2. background-color의 
    

7/9 ~ 12  Last challenge.
    Clock.
    Username (with localStorage).
    To Do List (with localStorage)
    Random Background Image.
    Weather with Geolocation.
    Make pretty CSS 💖



weather API 사용법

첫번째로 navigator.Geolocation.getCurrent() ? 함수를 통하여 
        user의 위치 정보를 얻는다. 실행시 성공/실패 함수를 파라미터로 전달해야한다.
    
두번째로 성공됬을시의 함수에 매개변수로 position의 값을 받는다. lat과 lon

세번째로 위치값을 저장 후 weather API를 사용하기위하여 홈페이지에  접속 후 
        원하는 주소값과 ID 값을 받아온다. 

네번째로 API주소값을 변수에 저장 한 후 fetch함수를 사용하여 js가 실행 할 수 있도록한다.

        fetch(url).then(response =>(response.json()))으로 api의 값을 받아온후
        한번 더 then()함수를 사용.

        then(data => (data.???)) 에서 원하는 값을 저장하고 홈페이지에 삽입한다. 